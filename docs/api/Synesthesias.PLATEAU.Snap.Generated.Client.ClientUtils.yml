### YamlMime:ManagedReference
items:
- uid: Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils
  commentId: T:Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils
  id: ClientUtils
  parent: Synesthesias.PLATEAU.Snap.Generated.Client
  children:
  - Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils.Base64Encode(System.String)
  - Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils.IsJsonMime(System.String)
  - Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils.JsonRegex
  - Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils.ParameterToMultiMap(System.String,System.String,System.Object)
  - Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils.ParameterToString(System.Object,Synesthesias.PLATEAU.Snap.Generated.Client.IReadableConfiguration)
  - Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils.ReadAsBytes(System.IO.Stream)
  - Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils.SanitizeFilename(System.String)
  - Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils.SelectHeaderAccept(System.String[])
  - Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils.SelectHeaderContentType(System.String[])
  - Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils.Serialize(System.Object)
  langs:
  - csharp
  - vb
  name: ClientUtils
  nameWithType: ClientUtils
  fullName: Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils
  type: Class
  source:
    remote:
      path: SnapForUnity/Assets/Samples/Synesthesias.Snap/Scripts/Generated/Client/Client/ClientUtils.cs
      branch: feature/update_docs
      repo: https://synesthesias-koichi-inoue@github.com/Synesthesias/PLATEAU-SNAP-App.git
    id: ClientUtils
    path: ../SnapForUnity/Assets/Samples/Synesthesias.Snap/Scripts/Generated/Client/Client/ClientUtils.cs
    startLine: 25
  assemblies:
  - Synesthesias.Snap.Generated.Sample
  namespace: Synesthesias.PLATEAU.Snap.Generated.Client
  summary: Utility functions providing some benefit to API client consumers.
  example: []
  syntax:
    content: public static class ClientUtils
    content.vb: Public Module ClientUtils
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils.SanitizeFilename(System.String)
  commentId: M:Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils.SanitizeFilename(System.String)
  id: SanitizeFilename(System.String)
  parent: Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils
  langs:
  - csharp
  - vb
  name: SanitizeFilename(string)
  nameWithType: ClientUtils.SanitizeFilename(string)
  fullName: Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils.SanitizeFilename(string)
  type: Method
  source:
    remote:
      path: SnapForUnity/Assets/Samples/Synesthesias.Snap/Scripts/Generated/Client/Client/ClientUtils.cs
      branch: feature/update_docs
      repo: https://synesthesias-koichi-inoue@github.com/Synesthesias/PLATEAU-SNAP-App.git
    id: SanitizeFilename
    path: ../SnapForUnity/Assets/Samples/Synesthesias.Snap/Scripts/Generated/Client/Client/ClientUtils.cs
    startLine: 32
  assemblies:
  - Synesthesias.Snap.Generated.Sample
  namespace: Synesthesias.PLATEAU.Snap.Generated.Client
  summary: Sanitize filename by removing the path
  example: []
  syntax:
    content: public static string SanitizeFilename(string filename)
    parameters:
    - id: filename
      type: System.String
      description: Filename
    return:
      type: System.String
      description: Filename
    content.vb: Public Shared Function SanitizeFilename(filename As String) As String
  overload: Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils.SanitizeFilename*
  nameWithType.vb: ClientUtils.SanitizeFilename(String)
  fullName.vb: Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils.SanitizeFilename(String)
  name.vb: SanitizeFilename(String)
- uid: Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils.ParameterToMultiMap(System.String,System.String,System.Object)
  commentId: M:Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils.ParameterToMultiMap(System.String,System.String,System.Object)
  id: ParameterToMultiMap(System.String,System.String,System.Object)
  parent: Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils
  langs:
  - csharp
  - vb
  name: ParameterToMultiMap(string, string, object)
  nameWithType: ClientUtils.ParameterToMultiMap(string, string, object)
  fullName: Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils.ParameterToMultiMap(string, string, object)
  type: Method
  source:
    remote:
      path: SnapForUnity/Assets/Samples/Synesthesias.Snap/Scripts/Generated/Client/Client/ClientUtils.cs
      branch: feature/update_docs
      repo: https://synesthesias-koichi-inoue@github.com/Synesthesias/PLATEAU-SNAP-App.git
    id: ParameterToMultiMap
    path: ../SnapForUnity/Assets/Samples/Synesthesias.Snap/Scripts/Generated/Client/Client/ClientUtils.cs
    startLine: 46
  assemblies:
  - Synesthesias.Snap.Generated.Sample
  namespace: Synesthesias.PLATEAU.Snap.Generated.Client
  summary: >-
    Convert params to key/value pairs.

    Use collectionFormat to properly format lists and collections.
  example: []
  syntax:
    content: public static Multimap<string, string> ParameterToMultiMap(string collectionFormat, string name, object value)
    parameters:
    - id: collectionFormat
      type: System.String
      description: 'The swagger-supported collection format, one of: csv, tsv, ssv, pipes, multi'
    - id: name
      type: System.String
      description: Key name.
    - id: value
      type: System.Object
      description: Value object.
    return:
      type: Synesthesias.PLATEAU.Snap.Generated.Client.Multimap{System.String,System.String}
      description: A multimap of keys with 1..n associated values.
    content.vb: Public Shared Function ParameterToMultiMap(collectionFormat As String, name As String, value As Object) As Multimap(Of String, String)
  overload: Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils.ParameterToMultiMap*
  nameWithType.vb: ClientUtils.ParameterToMultiMap(String, String, Object)
  fullName.vb: Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils.ParameterToMultiMap(String, String, Object)
  name.vb: ParameterToMultiMap(String, String, Object)
- uid: Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils.ParameterToString(System.Object,Synesthesias.PLATEAU.Snap.Generated.Client.IReadableConfiguration)
  commentId: M:Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils.ParameterToString(System.Object,Synesthesias.PLATEAU.Snap.Generated.Client.IReadableConfiguration)
  id: ParameterToString(System.Object,Synesthesias.PLATEAU.Snap.Generated.Client.IReadableConfiguration)
  parent: Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils
  langs:
  - csharp
  - vb
  name: ParameterToString(object, IReadableConfiguration)
  nameWithType: ClientUtils.ParameterToString(object, IReadableConfiguration)
  fullName: Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils.ParameterToString(object, Synesthesias.PLATEAU.Snap.Generated.Client.IReadableConfiguration)
  type: Method
  source:
    remote:
      path: SnapForUnity/Assets/Samples/Synesthesias.Snap/Scripts/Generated/Client/Client/ClientUtils.cs
      branch: feature/update_docs
      repo: https://synesthesias-koichi-inoue@github.com/Synesthesias/PLATEAU-SNAP-App.git
    id: ParameterToString
    path: ../SnapForUnity/Assets/Samples/Synesthesias.Snap/Scripts/Generated/Client/Client/ClientUtils.cs
    startLine: 88
  assemblies:
  - Synesthesias.Snap.Generated.Sample
  namespace: Synesthesias.PLATEAU.Snap.Generated.Client
  summary: >-
    If parameter is DateTime, output in a formatted string (default ISO 8601), customizable with Configuration.DateTime.

    If parameter is a list, join the list with ",".

    Otherwise just return the string.
  example: []
  syntax:
    content: public static string ParameterToString(object obj, IReadableConfiguration configuration = null)
    parameters:
    - id: obj
      type: System.Object
      description: The parameter (header, path, query, form).
    - id: configuration
      type: Synesthesias.PLATEAU.Snap.Generated.Client.IReadableConfiguration
      description: An optional configuration instance, providing formatting options used in processing.
    return:
      type: System.String
      description: Formatted string.
    content.vb: Public Shared Function ParameterToString(obj As Object, configuration As IReadableConfiguration = Nothing) As String
  overload: Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils.ParameterToString*
  nameWithType.vb: ClientUtils.ParameterToString(Object, IReadableConfiguration)
  fullName.vb: Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils.ParameterToString(Object, Synesthesias.PLATEAU.Snap.Generated.Client.IReadableConfiguration)
  name.vb: ParameterToString(Object, IReadableConfiguration)
- uid: Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils.Serialize(System.Object)
  commentId: M:Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils.Serialize(System.Object)
  id: Serialize(System.Object)
  parent: Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils
  langs:
  - csharp
  - vb
  name: Serialize(object)
  nameWithType: ClientUtils.Serialize(object)
  fullName: Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils.Serialize(object)
  type: Method
  source:
    remote:
      path: SnapForUnity/Assets/Samples/Synesthesias.Snap/Scripts/Generated/Client/Client/ClientUtils.cs
      branch: feature/update_docs
      repo: https://synesthesias-koichi-inoue@github.com/Synesthesias/PLATEAU-SNAP-App.git
    id: Serialize
    path: ../SnapForUnity/Assets/Samples/Synesthesias.Snap/Scripts/Generated/Client/Client/ClientUtils.cs
    startLine: 121
  assemblies:
  - Synesthesias.Snap.Generated.Sample
  namespace: Synesthesias.PLATEAU.Snap.Generated.Client
  summary: Serializes the given object when not null. Otherwise return null.
  example: []
  syntax:
    content: public static string Serialize(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: The object to serialize.
    return:
      type: System.String
      description: Serialized string.
    content.vb: Public Shared Function Serialize(obj As Object) As String
  overload: Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils.Serialize*
  nameWithType.vb: ClientUtils.Serialize(Object)
  fullName.vb: Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils.Serialize(Object)
  name.vb: Serialize(Object)
- uid: Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils.Base64Encode(System.String)
  commentId: M:Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils.Base64Encode(System.String)
  id: Base64Encode(System.String)
  parent: Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils
  langs:
  - csharp
  - vb
  name: Base64Encode(string)
  nameWithType: ClientUtils.Base64Encode(string)
  fullName: Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils.Base64Encode(string)
  type: Method
  source:
    remote:
      path: SnapForUnity/Assets/Samples/Synesthesias.Snap/Scripts/Generated/Client/Client/ClientUtils.cs
      branch: feature/update_docs
      repo: https://synesthesias-koichi-inoue@github.com/Synesthesias/PLATEAU-SNAP-App.git
    id: Base64Encode
    path: ../SnapForUnity/Assets/Samples/Synesthesias.Snap/Scripts/Generated/Client/Client/ClientUtils.cs
    startLine: 131
  assemblies:
  - Synesthesias.Snap.Generated.Sample
  namespace: Synesthesias.PLATEAU.Snap.Generated.Client
  summary: Encode string in base64 format.
  example: []
  syntax:
    content: public static string Base64Encode(string text)
    parameters:
    - id: text
      type: System.String
      description: string to be encoded.
    return:
      type: System.String
      description: Encoded string.
    content.vb: Public Shared Function Base64Encode(text As String) As String
  overload: Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils.Base64Encode*
  nameWithType.vb: ClientUtils.Base64Encode(String)
  fullName.vb: Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils.Base64Encode(String)
  name.vb: Base64Encode(String)
- uid: Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils.ReadAsBytes(System.IO.Stream)
  commentId: M:Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils.ReadAsBytes(System.IO.Stream)
  id: ReadAsBytes(System.IO.Stream)
  parent: Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils
  langs:
  - csharp
  - vb
  name: ReadAsBytes(Stream)
  nameWithType: ClientUtils.ReadAsBytes(Stream)
  fullName: Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils.ReadAsBytes(System.IO.Stream)
  type: Method
  source:
    remote:
      path: SnapForUnity/Assets/Samples/Synesthesias.Snap/Scripts/Generated/Client/Client/ClientUtils.cs
      branch: feature/update_docs
      repo: https://synesthesias-koichi-inoue@github.com/Synesthesias/PLATEAU-SNAP-App.git
    id: ReadAsBytes
    path: ../SnapForUnity/Assets/Samples/Synesthesias.Snap/Scripts/Generated/Client/Client/ClientUtils.cs
    startLine: 141
  assemblies:
  - Synesthesias.Snap.Generated.Sample
  namespace: Synesthesias.PLATEAU.Snap.Generated.Client
  summary: Convert stream to byte array
  example: []
  syntax:
    content: public static byte[] ReadAsBytes(Stream inputStream)
    parameters:
    - id: inputStream
      type: System.IO.Stream
      description: Input stream to be converted
    return:
      type: System.Byte[]
      description: Byte array
    content.vb: Public Shared Function ReadAsBytes(inputStream As Stream) As Byte()
  overload: Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils.ReadAsBytes*
- uid: Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils.SelectHeaderContentType(System.String[])
  commentId: M:Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils.SelectHeaderContentType(System.String[])
  id: SelectHeaderContentType(System.String[])
  parent: Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils
  langs:
  - csharp
  - vb
  name: SelectHeaderContentType(string[])
  nameWithType: ClientUtils.SelectHeaderContentType(string[])
  fullName: Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils.SelectHeaderContentType(string[])
  type: Method
  source:
    remote:
      path: SnapForUnity/Assets/Samples/Synesthesias.Snap/Scripts/Generated/Client/Client/ClientUtils.cs
      branch: feature/update_docs
      repo: https://synesthesias-koichi-inoue@github.com/Synesthesias/PLATEAU-SNAP-App.git
    id: SelectHeaderContentType
    path: ../SnapForUnity/Assets/Samples/Synesthesias.Snap/Scripts/Generated/Client/Client/ClientUtils.cs
    startLine: 157
  assemblies:
  - Synesthesias.Snap.Generated.Sample
  namespace: Synesthesias.PLATEAU.Snap.Generated.Client
  summary: >-
    Select the Content-Type header's value from the given content-type array:

    if JSON type exists in the given array, use it;

    otherwise use the first one defined in 'consumes'
  example: []
  syntax:
    content: public static string SelectHeaderContentType(string[] contentTypes)
    parameters:
    - id: contentTypes
      type: System.String[]
      description: The Content-Type array to select from.
    return:
      type: System.String
      description: The Content-Type header to use.
    content.vb: Public Shared Function SelectHeaderContentType(contentTypes As String()) As String
  overload: Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils.SelectHeaderContentType*
  nameWithType.vb: ClientUtils.SelectHeaderContentType(String())
  fullName.vb: Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils.SelectHeaderContentType(String())
  name.vb: SelectHeaderContentType(String())
- uid: Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils.SelectHeaderAccept(System.String[])
  commentId: M:Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils.SelectHeaderAccept(System.String[])
  id: SelectHeaderAccept(System.String[])
  parent: Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils
  langs:
  - csharp
  - vb
  name: SelectHeaderAccept(string[])
  nameWithType: ClientUtils.SelectHeaderAccept(string[])
  fullName: Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils.SelectHeaderAccept(string[])
  type: Method
  source:
    remote:
      path: SnapForUnity/Assets/Samples/Synesthesias.Snap/Scripts/Generated/Client/Client/ClientUtils.cs
      branch: feature/update_docs
      repo: https://synesthesias-koichi-inoue@github.com/Synesthesias/PLATEAU-SNAP-App.git
    id: SelectHeaderAccept
    path: ../SnapForUnity/Assets/Samples/Synesthesias.Snap/Scripts/Generated/Client/Client/ClientUtils.cs
    startLine: 178
  assemblies:
  - Synesthesias.Snap.Generated.Sample
  namespace: Synesthesias.PLATEAU.Snap.Generated.Client
  summary: >-
    Select the Accept header's value from the given accepts array:

    if JSON exists in the given array, use it;

    otherwise use all of them (joining into a string)
  example: []
  syntax:
    content: public static string SelectHeaderAccept(string[] accepts)
    parameters:
    - id: accepts
      type: System.String[]
      description: The accepts array to select from.
    return:
      type: System.String
      description: The Accept header to use.
    content.vb: Public Shared Function SelectHeaderAccept(accepts As String()) As String
  overload: Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils.SelectHeaderAccept*
  nameWithType.vb: ClientUtils.SelectHeaderAccept(String())
  fullName.vb: Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils.SelectHeaderAccept(String())
  name.vb: SelectHeaderAccept(String())
- uid: Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils.JsonRegex
  commentId: F:Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils.JsonRegex
  id: JsonRegex
  parent: Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils
  langs:
  - csharp
  - vb
  name: JsonRegex
  nameWithType: ClientUtils.JsonRegex
  fullName: Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils.JsonRegex
  type: Field
  source:
    remote:
      path: SnapForUnity/Assets/Samples/Synesthesias.Snap/Scripts/Generated/Client/Client/ClientUtils.cs
      branch: feature/update_docs
      repo: https://synesthesias-koichi-inoue@github.com/Synesthesias/PLATEAU-SNAP-App.git
    id: JsonRegex
    path: ../SnapForUnity/Assets/Samples/Synesthesias.Snap/Scripts/Generated/Client/Client/ClientUtils.cs
    startLine: 192
  assemblies:
  - Synesthesias.Snap.Generated.Sample
  namespace: Synesthesias.PLATEAU.Snap.Generated.Client
  summary: Provides a case-insensitive check that a provided content type is a known JSON-like content type.
  example: []
  syntax:
    content: public static readonly Regex JsonRegex
    return:
      type: System.Text.RegularExpressions.Regex
    content.vb: Public Shared ReadOnly JsonRegex As Regex
- uid: Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils.IsJsonMime(System.String)
  commentId: M:Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils.IsJsonMime(System.String)
  id: IsJsonMime(System.String)
  parent: Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils
  langs:
  - csharp
  - vb
  name: IsJsonMime(string)
  nameWithType: ClientUtils.IsJsonMime(string)
  fullName: Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils.IsJsonMime(string)
  type: Method
  source:
    remote:
      path: SnapForUnity/Assets/Samples/Synesthesias.Snap/Scripts/Generated/Client/Client/ClientUtils.cs
      branch: feature/update_docs
      repo: https://synesthesias-koichi-inoue@github.com/Synesthesias/PLATEAU-SNAP-App.git
    id: IsJsonMime
    path: ../SnapForUnity/Assets/Samples/Synesthesias.Snap/Scripts/Generated/Client/Client/ClientUtils.cs
    startLine: 204
  assemblies:
  - Synesthesias.Snap.Generated.Sample
  namespace: Synesthesias.PLATEAU.Snap.Generated.Client
  summary: >-
    Check if the given MIME is a JSON MIME.

    JSON MIME examples:
       application/json
       application/json; charset=UTF8
       APPLICATION/JSON
       application/vnd.company+json
  example: []
  syntax:
    content: public static bool IsJsonMime(string mime)
    parameters:
    - id: mime
      type: System.String
      description: MIME
    return:
      type: System.Boolean
      description: Returns True if MIME type is json.
    content.vb: Public Shared Function IsJsonMime(mime As String) As Boolean
  overload: Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils.IsJsonMime*
  nameWithType.vb: ClientUtils.IsJsonMime(String)
  fullName.vb: Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils.IsJsonMime(String)
  name.vb: IsJsonMime(String)
references:
- uid: Synesthesias.PLATEAU.Snap.Generated.Client
  commentId: N:Synesthesias.PLATEAU.Snap.Generated.Client
  href: Synesthesias.html
  name: Synesthesias.PLATEAU.Snap.Generated.Client
  nameWithType: Synesthesias.PLATEAU.Snap.Generated.Client
  fullName: Synesthesias.PLATEAU.Snap.Generated.Client
  spec.csharp:
  - uid: Synesthesias
    name: Synesthesias
    href: Synesthesias.html
  - name: .
  - uid: Synesthesias.PLATEAU
    name: PLATEAU
    href: Synesthesias.PLATEAU.html
  - name: .
  - uid: Synesthesias.PLATEAU.Snap
    name: Snap
    href: Synesthesias.PLATEAU.Snap.html
  - name: .
  - uid: Synesthesias.PLATEAU.Snap.Generated
    name: Generated
    href: Synesthesias.PLATEAU.Snap.Generated.html
  - name: .
  - uid: Synesthesias.PLATEAU.Snap.Generated.Client
    name: Client
    href: Synesthesias.PLATEAU.Snap.Generated.Client.html
  spec.vb:
  - uid: Synesthesias
    name: Synesthesias
    href: Synesthesias.html
  - name: .
  - uid: Synesthesias.PLATEAU
    name: PLATEAU
    href: Synesthesias.PLATEAU.html
  - name: .
  - uid: Synesthesias.PLATEAU.Snap
    name: Snap
    href: Synesthesias.PLATEAU.Snap.html
  - name: .
  - uid: Synesthesias.PLATEAU.Snap.Generated
    name: Generated
    href: Synesthesias.PLATEAU.Snap.Generated.html
  - name: .
  - uid: Synesthesias.PLATEAU.Snap.Generated.Client
    name: Client
    href: Synesthesias.PLATEAU.Snap.Generated.Client.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils.SanitizeFilename*
  commentId: Overload:Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils.SanitizeFilename
  href: Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils.html#Synesthesias_PLATEAU_Snap_Generated_Client_ClientUtils_SanitizeFilename_System_String_
  name: SanitizeFilename
  nameWithType: ClientUtils.SanitizeFilename
  fullName: Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils.SanitizeFilename
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils.ParameterToMultiMap*
  commentId: Overload:Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils.ParameterToMultiMap
  href: Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils.html#Synesthesias_PLATEAU_Snap_Generated_Client_ClientUtils_ParameterToMultiMap_System_String_System_String_System_Object_
  name: ParameterToMultiMap
  nameWithType: ClientUtils.ParameterToMultiMap
  fullName: Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils.ParameterToMultiMap
- uid: Synesthesias.PLATEAU.Snap.Generated.Client.Multimap{System.String,System.String}
  commentId: T:Synesthesias.PLATEAU.Snap.Generated.Client.Multimap{System.String,System.String}
  parent: Synesthesias.PLATEAU.Snap.Generated.Client
  definition: Synesthesias.PLATEAU.Snap.Generated.Client.Multimap`2
  href: Synesthesias.PLATEAU.Snap.Generated.Client.Multimap-2.html
  name: Multimap<string, string>
  nameWithType: Multimap<string, string>
  fullName: Synesthesias.PLATEAU.Snap.Generated.Client.Multimap<string, string>
  nameWithType.vb: Multimap(Of String, String)
  fullName.vb: Synesthesias.PLATEAU.Snap.Generated.Client.Multimap(Of String, String)
  name.vb: Multimap(Of String, String)
  spec.csharp:
  - uid: Synesthesias.PLATEAU.Snap.Generated.Client.Multimap`2
    name: Multimap
    href: Synesthesias.PLATEAU.Snap.Generated.Client.Multimap-2.html
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: Synesthesias.PLATEAU.Snap.Generated.Client.Multimap`2
    name: Multimap
    href: Synesthesias.PLATEAU.Snap.Generated.Client.Multimap-2.html
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Synesthesias.PLATEAU.Snap.Generated.Client.Multimap`2
  commentId: T:Synesthesias.PLATEAU.Snap.Generated.Client.Multimap`2
  parent: Synesthesias.PLATEAU.Snap.Generated.Client
  href: Synesthesias.PLATEAU.Snap.Generated.Client.Multimap-2.html
  name: Multimap<TKey, TValue>
  nameWithType: Multimap<TKey, TValue>
  fullName: Synesthesias.PLATEAU.Snap.Generated.Client.Multimap<TKey, TValue>
  nameWithType.vb: Multimap(Of TKey, TValue)
  fullName.vb: Synesthesias.PLATEAU.Snap.Generated.Client.Multimap(Of TKey, TValue)
  name.vb: Multimap(Of TKey, TValue)
  spec.csharp:
  - uid: Synesthesias.PLATEAU.Snap.Generated.Client.Multimap`2
    name: Multimap
    href: Synesthesias.PLATEAU.Snap.Generated.Client.Multimap-2.html
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: Synesthesias.PLATEAU.Snap.Generated.Client.Multimap`2
    name: Multimap
    href: Synesthesias.PLATEAU.Snap.Generated.Client.Multimap-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils.ParameterToString*
  commentId: Overload:Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils.ParameterToString
  href: Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils.html#Synesthesias_PLATEAU_Snap_Generated_Client_ClientUtils_ParameterToString_System_Object_Synesthesias_PLATEAU_Snap_Generated_Client_IReadableConfiguration_
  name: ParameterToString
  nameWithType: ClientUtils.ParameterToString
  fullName: Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils.ParameterToString
- uid: Synesthesias.PLATEAU.Snap.Generated.Client.IReadableConfiguration
  commentId: T:Synesthesias.PLATEAU.Snap.Generated.Client.IReadableConfiguration
  parent: Synesthesias.PLATEAU.Snap.Generated.Client
  href: Synesthesias.PLATEAU.Snap.Generated.Client.IReadableConfiguration.html
  name: IReadableConfiguration
  nameWithType: IReadableConfiguration
  fullName: Synesthesias.PLATEAU.Snap.Generated.Client.IReadableConfiguration
- uid: Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils.Serialize*
  commentId: Overload:Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils.Serialize
  href: Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils.html#Synesthesias_PLATEAU_Snap_Generated_Client_ClientUtils_Serialize_System_Object_
  name: Serialize
  nameWithType: ClientUtils.Serialize
  fullName: Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils.Serialize
- uid: Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils.Base64Encode*
  commentId: Overload:Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils.Base64Encode
  href: Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils.html#Synesthesias_PLATEAU_Snap_Generated_Client_ClientUtils_Base64Encode_System_String_
  name: Base64Encode
  nameWithType: ClientUtils.Base64Encode
  fullName: Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils.Base64Encode
- uid: Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils.ReadAsBytes*
  commentId: Overload:Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils.ReadAsBytes
  href: Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils.html#Synesthesias_PLATEAU_Snap_Generated_Client_ClientUtils_ReadAsBytes_System_IO_Stream_
  name: ReadAsBytes
  nameWithType: ClientUtils.ReadAsBytes
  fullName: Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils.ReadAsBytes
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.stream
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Byte[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte[]
  nameWithType: byte[]
  fullName: byte[]
  nameWithType.vb: Byte()
  fullName.vb: Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
- uid: Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils.SelectHeaderContentType*
  commentId: Overload:Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils.SelectHeaderContentType
  href: Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils.html#Synesthesias_PLATEAU_Snap_Generated_Client_ClientUtils_SelectHeaderContentType_System_String___
  name: SelectHeaderContentType
  nameWithType: ClientUtils.SelectHeaderContentType
  fullName: Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils.SelectHeaderContentType
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils.SelectHeaderAccept*
  commentId: Overload:Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils.SelectHeaderAccept
  href: Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils.html#Synesthesias_PLATEAU_Snap_Generated_Client_ClientUtils_SelectHeaderAccept_System_String___
  name: SelectHeaderAccept
  nameWithType: ClientUtils.SelectHeaderAccept
  fullName: Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils.SelectHeaderAccept
- uid: System.Text.RegularExpressions.Regex
  commentId: T:System.Text.RegularExpressions.Regex
  parent: System.Text.RegularExpressions
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.text.regularexpressions.regex
  name: Regex
  nameWithType: Regex
  fullName: System.Text.RegularExpressions.Regex
- uid: System.Text.RegularExpressions
  commentId: N:System.Text.RegularExpressions
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Text.RegularExpressions
  nameWithType: System.Text.RegularExpressions
  fullName: System.Text.RegularExpressions
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
  - name: .
  - uid: System.Text.RegularExpressions
    name: RegularExpressions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.regularexpressions
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
  - name: .
  - uid: System.Text.RegularExpressions
    name: RegularExpressions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.regularexpressions
- uid: Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils.IsJsonMime*
  commentId: Overload:Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils.IsJsonMime
  href: Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils.html#Synesthesias_PLATEAU_Snap_Generated_Client_ClientUtils_IsJsonMime_System_String_
  name: IsJsonMime
  nameWithType: ClientUtils.IsJsonMime
  fullName: Synesthesias.PLATEAU.Snap.Generated.Client.ClientUtils.IsJsonMime
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
