### YamlMime:ManagedReference
items:
- uid: Synesthesias.Snap.Sample.SurfaceRepository
  commentId: T:Synesthesias.Snap.Sample.SurfaceRepository
  id: SurfaceRepository
  parent: Synesthesias.Snap.Sample
  children:
  - Synesthesias.Snap.Sample.SurfaceRepository.#ctor(Synesthesias.PLATEAU.Snap.Generated.Api.ISurfacesApiAsync)
  - Synesthesias.Snap.Sample.SurfaceRepository.GetVisibleSurfacesAsync(Google.XR.ARCoreExtensions.GeospatialPose,Google.XR.ARCoreExtensions.GeospatialPose,System.Double,System.Double,System.Double,System.Threading.CancellationToken)
  - Synesthesias.Snap.Sample.SurfaceRepository.GetVisibleSurfacesAsync(Google.XR.ARCoreExtensions.GeospatialPose,Google.XR.ARCoreExtensions.GeospatialPose,UnityEngine.Camera,System.Double,System.Threading.CancellationToken)
  - Synesthesias.Snap.Sample.SurfaceRepository.GetVisibleSurfacesAsync(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: SurfaceRepository
  nameWithType: SurfaceRepository
  fullName: Synesthesias.Snap.Sample.SurfaceRepository
  type: Class
  source:
    remote:
      path: SnapForUnity/Assets/Samples/Synesthesias.Snap/Scripts/Repository/SurfaceRepository.cs
      branch: feature/doc_fx
      repo: https://synesthesias-koichi-inoue@github.com/Synesthesias/PLATEAU-SNAP-App.git
    id: SurfaceRepository
    path: ../SnapForUnity/Assets/Samples/Synesthesias.Snap/Scripts/Repository/SurfaceRepository.cs
    startLine: 16
  assemblies:
  - Synesthesias.Snap.Sample
  namespace: Synesthesias.Snap.Sample
  summary: 現在の位置で撮影可能な面の情報を取得するリポジトリ
  example: []
  syntax:
    content: public class SurfaceRepository
    content.vb: Public Class SurfaceRepository
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Synesthesias.Snap.Sample.SurfaceRepository.#ctor(Synesthesias.PLATEAU.Snap.Generated.Api.ISurfacesApiAsync)
  commentId: M:Synesthesias.Snap.Sample.SurfaceRepository.#ctor(Synesthesias.PLATEAU.Snap.Generated.Api.ISurfacesApiAsync)
  id: '#ctor(Synesthesias.PLATEAU.Snap.Generated.Api.ISurfacesApiAsync)'
  parent: Synesthesias.Snap.Sample.SurfaceRepository
  langs:
  - csharp
  - vb
  name: SurfaceRepository(ISurfacesApiAsync)
  nameWithType: SurfaceRepository.SurfaceRepository(ISurfacesApiAsync)
  fullName: Synesthesias.Snap.Sample.SurfaceRepository.SurfaceRepository(Synesthesias.PLATEAU.Snap.Generated.Api.ISurfacesApiAsync)
  type: Constructor
  source:
    remote:
      path: SnapForUnity/Assets/Samples/Synesthesias.Snap/Scripts/Repository/SurfaceRepository.cs
      branch: feature/doc_fx
      repo: https://synesthesias-koichi-inoue@github.com/Synesthesias/PLATEAU-SNAP-App.git
    id: .ctor
    path: ../SnapForUnity/Assets/Samples/Synesthesias.Snap/Scripts/Repository/SurfaceRepository.cs
    startLine: 26
  assemblies:
  - Synesthesias.Snap.Sample
  namespace: Synesthesias.Snap.Sample
  summary: コンストラクタ
  example: []
  syntax:
    content: public SurfaceRepository(ISurfacesApiAsync surfacesApiAsync)
    parameters:
    - id: surfacesApiAsync
      type: Synesthesias.PLATEAU.Snap.Generated.Api.ISurfacesApiAsync
    content.vb: Public Sub New(surfacesApiAsync As ISurfacesApiAsync)
  overload: Synesthesias.Snap.Sample.SurfaceRepository.#ctor*
  nameWithType.vb: SurfaceRepository.New(ISurfacesApiAsync)
  fullName.vb: Synesthesias.Snap.Sample.SurfaceRepository.New(Synesthesias.PLATEAU.Snap.Generated.Api.ISurfacesApiAsync)
  name.vb: New(ISurfacesApiAsync)
- uid: Synesthesias.Snap.Sample.SurfaceRepository.GetVisibleSurfacesAsync(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Threading.CancellationToken)
  commentId: M:Synesthesias.Snap.Sample.SurfaceRepository.GetVisibleSurfacesAsync(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Threading.CancellationToken)
  id: GetVisibleSurfacesAsync(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Threading.CancellationToken)
  parent: Synesthesias.Snap.Sample.SurfaceRepository
  langs:
  - csharp
  - vb
  name: GetVisibleSurfacesAsync(double, double, double, double, double, double, double, double, double, CancellationToken)
  nameWithType: SurfaceRepository.GetVisibleSurfacesAsync(double, double, double, double, double, double, double, double, double, CancellationToken)
  fullName: Synesthesias.Snap.Sample.SurfaceRepository.GetVisibleSurfacesAsync(double, double, double, double, double, double, double, double, double, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: SnapForUnity/Assets/Samples/Synesthesias.Snap/Scripts/Repository/SurfaceRepository.cs
      branch: feature/doc_fx
      repo: https://synesthesias-koichi-inoue@github.com/Synesthesias/PLATEAU-SNAP-App.git
    id: GetVisibleSurfacesAsync
    path: ../SnapForUnity/Assets/Samples/Synesthesias.Snap/Scripts/Repository/SurfaceRepository.cs
    startLine: 46
  assemblies:
  - Synesthesias.Snap.Sample
  namespace: Synesthesias.Snap.Sample
  summary: 現在の位置で撮影可能な面の情報を取得
  example: []
  syntax:
    content: public UniTask<IReadOnlyList<ISurfaceModel>> GetVisibleSurfacesAsync(double fromLatitude, double fromLongitude, double fromAltitude, double toLatitude, double toLongitude, double toAltitude, double roll, double maxDistance, double fieldOfView, CancellationToken cancellationToken)
    parameters:
    - id: fromLatitude
      type: System.Double
      description: 始点の緯度
    - id: fromLongitude
      type: System.Double
      description: 始点の経度
    - id: fromAltitude
      type: System.Double
      description: 始点の高度
    - id: toLatitude
      type: System.Double
      description: 終点の緯度
    - id: toLongitude
      type: System.Double
      description: 終点の経度
    - id: toAltitude
      type: System.Double
      description: 終点の高度
    - id: roll
      type: System.Double
      description: 回転
    - id: maxDistance
      type: System.Double
      description: 最大距離
    - id: fieldOfView
      type: System.Double
      description: 視野角
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: キャンセルトークン
    return:
      type: Cysharp.Threading.Tasks.UniTask{System.Collections.Generic.IReadOnlyList{Synesthesias.Snap.Runtime.ISurfaceModel}}
      description: 面の配列
    content.vb: Public Function GetVisibleSurfacesAsync(fromLatitude As Double, fromLongitude As Double, fromAltitude As Double, toLatitude As Double, toLongitude As Double, toAltitude As Double, roll As Double, maxDistance As Double, fieldOfView As Double, cancellationToken As CancellationToken) As UniTask(Of IReadOnlyList(Of ISurfaceModel))
  overload: Synesthesias.Snap.Sample.SurfaceRepository.GetVisibleSurfacesAsync*
  nameWithType.vb: SurfaceRepository.GetVisibleSurfacesAsync(Double, Double, Double, Double, Double, Double, Double, Double, Double, CancellationToken)
  fullName.vb: Synesthesias.Snap.Sample.SurfaceRepository.GetVisibleSurfacesAsync(Double, Double, Double, Double, Double, Double, Double, Double, Double, System.Threading.CancellationToken)
  name.vb: GetVisibleSurfacesAsync(Double, Double, Double, Double, Double, Double, Double, Double, Double, CancellationToken)
- uid: Synesthesias.Snap.Sample.SurfaceRepository.GetVisibleSurfacesAsync(Google.XR.ARCoreExtensions.GeospatialPose,Google.XR.ARCoreExtensions.GeospatialPose,System.Double,System.Double,System.Double,System.Threading.CancellationToken)
  commentId: M:Synesthesias.Snap.Sample.SurfaceRepository.GetVisibleSurfacesAsync(Google.XR.ARCoreExtensions.GeospatialPose,Google.XR.ARCoreExtensions.GeospatialPose,System.Double,System.Double,System.Double,System.Threading.CancellationToken)
  id: GetVisibleSurfacesAsync(Google.XR.ARCoreExtensions.GeospatialPose,Google.XR.ARCoreExtensions.GeospatialPose,System.Double,System.Double,System.Double,System.Threading.CancellationToken)
  parent: Synesthesias.Snap.Sample.SurfaceRepository
  langs:
  - csharp
  - vb
  name: GetVisibleSurfacesAsync(GeospatialPose, GeospatialPose, double, double, double, CancellationToken)
  nameWithType: SurfaceRepository.GetVisibleSurfacesAsync(GeospatialPose, GeospatialPose, double, double, double, CancellationToken)
  fullName: Synesthesias.Snap.Sample.SurfaceRepository.GetVisibleSurfacesAsync(Google.XR.ARCoreExtensions.GeospatialPose, Google.XR.ARCoreExtensions.GeospatialPose, double, double, double, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: SnapForUnity/Assets/Samples/Synesthesias.Snap/Scripts/Repository/SurfaceRepository.cs
      branch: feature/doc_fx
      repo: https://synesthesias-koichi-inoue@github.com/Synesthesias/PLATEAU-SNAP-App.git
    id: GetVisibleSurfacesAsync
    path: ../SnapForUnity/Assets/Samples/Synesthesias.Snap/Scripts/Repository/SurfaceRepository.cs
    startLine: 124
  assemblies:
  - Synesthesias.Snap.Sample
  namespace: Synesthesias.Snap.Sample
  summary: 現在の位置で撮影可能な面の情報を取得
  example: []
  syntax:
    content: public UniTask<IReadOnlyList<ISurfaceModel>> GetVisibleSurfacesAsync(GeospatialPose fromGeospatialPose, GeospatialPose toGeospatialPose, double roll, double maxDistance, double fieldOfView, CancellationToken cancellationToken)
    parameters:
    - id: fromGeospatialPose
      type: Google.XR.ARCoreExtensions.GeospatialPose
      description: 始点のGeospatial情報
    - id: toGeospatialPose
      type: Google.XR.ARCoreExtensions.GeospatialPose
      description: 終点のGeospatial情報
    - id: roll
      type: System.Double
      description: 回転
    - id: maxDistance
      type: System.Double
      description: 最大距離
    - id: fieldOfView
      type: System.Double
      description: 視野角
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: キャンセルトークン
    return:
      type: Cysharp.Threading.Tasks.UniTask{System.Collections.Generic.IReadOnlyList{Synesthesias.Snap.Runtime.ISurfaceModel}}
      description: 面の配列
    content.vb: Public Function GetVisibleSurfacesAsync(fromGeospatialPose As GeospatialPose, toGeospatialPose As GeospatialPose, roll As Double, maxDistance As Double, fieldOfView As Double, cancellationToken As CancellationToken) As UniTask(Of IReadOnlyList(Of ISurfaceModel))
  overload: Synesthesias.Snap.Sample.SurfaceRepository.GetVisibleSurfacesAsync*
  nameWithType.vb: SurfaceRepository.GetVisibleSurfacesAsync(GeospatialPose, GeospatialPose, Double, Double, Double, CancellationToken)
  fullName.vb: Synesthesias.Snap.Sample.SurfaceRepository.GetVisibleSurfacesAsync(Google.XR.ARCoreExtensions.GeospatialPose, Google.XR.ARCoreExtensions.GeospatialPose, Double, Double, Double, System.Threading.CancellationToken)
  name.vb: GetVisibleSurfacesAsync(GeospatialPose, GeospatialPose, Double, Double, Double, CancellationToken)
- uid: Synesthesias.Snap.Sample.SurfaceRepository.GetVisibleSurfacesAsync(Google.XR.ARCoreExtensions.GeospatialPose,Google.XR.ARCoreExtensions.GeospatialPose,UnityEngine.Camera,System.Double,System.Threading.CancellationToken)
  commentId: M:Synesthesias.Snap.Sample.SurfaceRepository.GetVisibleSurfacesAsync(Google.XR.ARCoreExtensions.GeospatialPose,Google.XR.ARCoreExtensions.GeospatialPose,UnityEngine.Camera,System.Double,System.Threading.CancellationToken)
  id: GetVisibleSurfacesAsync(Google.XR.ARCoreExtensions.GeospatialPose,Google.XR.ARCoreExtensions.GeospatialPose,UnityEngine.Camera,System.Double,System.Threading.CancellationToken)
  parent: Synesthesias.Snap.Sample.SurfaceRepository
  langs:
  - csharp
  - vb
  name: GetVisibleSurfacesAsync(GeospatialPose, GeospatialPose, Camera, double, CancellationToken)
  nameWithType: SurfaceRepository.GetVisibleSurfacesAsync(GeospatialPose, GeospatialPose, Camera, double, CancellationToken)
  fullName: Synesthesias.Snap.Sample.SurfaceRepository.GetVisibleSurfacesAsync(Google.XR.ARCoreExtensions.GeospatialPose, Google.XR.ARCoreExtensions.GeospatialPose, UnityEngine.Camera, double, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: SnapForUnity/Assets/Samples/Synesthesias.Snap/Scripts/Repository/SurfaceRepository.cs
      branch: feature/doc_fx
      repo: https://synesthesias-koichi-inoue@github.com/Synesthesias/PLATEAU-SNAP-App.git
    id: GetVisibleSurfacesAsync
    path: ../SnapForUnity/Assets/Samples/Synesthesias.Snap/Scripts/Repository/SurfaceRepository.cs
    startLine: 156
  assemblies:
  - Synesthesias.Snap.Sample
  namespace: Synesthesias.Snap.Sample
  summary: 現在の位置で撮影可能な面の情報を取得
  example: []
  syntax:
    content: public UniTask<IReadOnlyList<ISurfaceModel>> GetVisibleSurfacesAsync(GeospatialPose fromGeospatialPose, GeospatialPose toGeospatialPose, Camera camera, double maxDistance, CancellationToken cancellationToken)
    parameters:
    - id: fromGeospatialPose
      type: Google.XR.ARCoreExtensions.GeospatialPose
      description: 始点のGeospatial情報
    - id: toGeospatialPose
      type: Google.XR.ARCoreExtensions.GeospatialPose
      description: 終点のGeospatial情報
    - id: camera
      type: UnityEngine.Camera
      description: カメラ
    - id: maxDistance
      type: System.Double
      description: 最大距離
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: キャンセルトークン
    return:
      type: Cysharp.Threading.Tasks.UniTask{System.Collections.Generic.IReadOnlyList{Synesthesias.Snap.Runtime.ISurfaceModel}}
      description: 面の配列
    content.vb: Public Function GetVisibleSurfacesAsync(fromGeospatialPose As GeospatialPose, toGeospatialPose As GeospatialPose, camera As Camera, maxDistance As Double, cancellationToken As CancellationToken) As UniTask(Of IReadOnlyList(Of ISurfaceModel))
  overload: Synesthesias.Snap.Sample.SurfaceRepository.GetVisibleSurfacesAsync*
  nameWithType.vb: SurfaceRepository.GetVisibleSurfacesAsync(GeospatialPose, GeospatialPose, Camera, Double, CancellationToken)
  fullName.vb: Synesthesias.Snap.Sample.SurfaceRepository.GetVisibleSurfacesAsync(Google.XR.ARCoreExtensions.GeospatialPose, Google.XR.ARCoreExtensions.GeospatialPose, UnityEngine.Camera, Double, System.Threading.CancellationToken)
  name.vb: GetVisibleSurfacesAsync(GeospatialPose, GeospatialPose, Camera, Double, CancellationToken)
references:
- uid: Synesthesias.Snap.Sample
  commentId: N:Synesthesias.Snap.Sample
  href: Synesthesias.html
  name: Synesthesias.Snap.Sample
  nameWithType: Synesthesias.Snap.Sample
  fullName: Synesthesias.Snap.Sample
  spec.csharp:
  - uid: Synesthesias
    name: Synesthesias
    href: Synesthesias.html
  - name: .
  - uid: Synesthesias.Snap
    name: Snap
    href: Synesthesias.Snap.html
  - name: .
  - uid: Synesthesias.Snap.Sample
    name: Sample
    href: Synesthesias.Snap.Sample.html
  spec.vb:
  - uid: Synesthesias
    name: Synesthesias
    href: Synesthesias.html
  - name: .
  - uid: Synesthesias.Snap
    name: Snap
    href: Synesthesias.Snap.html
  - name: .
  - uid: Synesthesias.Snap.Sample
    name: Sample
    href: Synesthesias.Snap.Sample.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Synesthesias.Snap.Sample.SurfaceRepository.#ctor*
  commentId: Overload:Synesthesias.Snap.Sample.SurfaceRepository.#ctor
  href: Synesthesias.Snap.Sample.SurfaceRepository.html#Synesthesias_Snap_Sample_SurfaceRepository__ctor_Synesthesias_PLATEAU_Snap_Generated_Api_ISurfacesApiAsync_
  name: SurfaceRepository
  nameWithType: SurfaceRepository.SurfaceRepository
  fullName: Synesthesias.Snap.Sample.SurfaceRepository.SurfaceRepository
  nameWithType.vb: SurfaceRepository.New
  fullName.vb: Synesthesias.Snap.Sample.SurfaceRepository.New
  name.vb: New
- uid: Synesthesias.PLATEAU.Snap.Generated.Api.ISurfacesApiAsync
  commentId: T:Synesthesias.PLATEAU.Snap.Generated.Api.ISurfacesApiAsync
  parent: Synesthesias.PLATEAU.Snap.Generated.Api
  href: Synesthesias.PLATEAU.Snap.Generated.Api.ISurfacesApiAsync.html
  name: ISurfacesApiAsync
  nameWithType: ISurfacesApiAsync
  fullName: Synesthesias.PLATEAU.Snap.Generated.Api.ISurfacesApiAsync
- uid: Synesthesias.PLATEAU.Snap.Generated.Api
  commentId: N:Synesthesias.PLATEAU.Snap.Generated.Api
  href: Synesthesias.html
  name: Synesthesias.PLATEAU.Snap.Generated.Api
  nameWithType: Synesthesias.PLATEAU.Snap.Generated.Api
  fullName: Synesthesias.PLATEAU.Snap.Generated.Api
  spec.csharp:
  - uid: Synesthesias
    name: Synesthesias
    href: Synesthesias.html
  - name: .
  - uid: Synesthesias.PLATEAU
    name: PLATEAU
    href: Synesthesias.PLATEAU.html
  - name: .
  - uid: Synesthesias.PLATEAU.Snap
    name: Snap
    href: Synesthesias.PLATEAU.Snap.html
  - name: .
  - uid: Synesthesias.PLATEAU.Snap.Generated
    name: Generated
    href: Synesthesias.PLATEAU.Snap.Generated.html
  - name: .
  - uid: Synesthesias.PLATEAU.Snap.Generated.Api
    name: Api
    href: Synesthesias.PLATEAU.Snap.Generated.Api.html
  spec.vb:
  - uid: Synesthesias
    name: Synesthesias
    href: Synesthesias.html
  - name: .
  - uid: Synesthesias.PLATEAU
    name: PLATEAU
    href: Synesthesias.PLATEAU.html
  - name: .
  - uid: Synesthesias.PLATEAU.Snap
    name: Snap
    href: Synesthesias.PLATEAU.Snap.html
  - name: .
  - uid: Synesthesias.PLATEAU.Snap.Generated
    name: Generated
    href: Synesthesias.PLATEAU.Snap.Generated.html
  - name: .
  - uid: Synesthesias.PLATEAU.Snap.Generated.Api
    name: Api
    href: Synesthesias.PLATEAU.Snap.Generated.Api.html
- uid: Synesthesias.Snap.Sample.SurfaceRepository.GetVisibleSurfacesAsync*
  commentId: Overload:Synesthesias.Snap.Sample.SurfaceRepository.GetVisibleSurfacesAsync
  href: Synesthesias.Snap.Sample.SurfaceRepository.html#Synesthesias_Snap_Sample_SurfaceRepository_GetVisibleSurfacesAsync_System_Double_System_Double_System_Double_System_Double_System_Double_System_Double_System_Double_System_Double_System_Double_System_Threading_CancellationToken_
  name: GetVisibleSurfacesAsync
  nameWithType: SurfaceRepository.GetVisibleSurfacesAsync
  fullName: Synesthesias.Snap.Sample.SurfaceRepository.GetVisibleSurfacesAsync
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: Cysharp.Threading.Tasks.UniTask{System.Collections.Generic.IReadOnlyList{Synesthesias.Snap.Runtime.ISurfaceModel}}
  commentId: T:Cysharp.Threading.Tasks.UniTask{System.Collections.Generic.IReadOnlyList{Synesthesias.Snap.Runtime.ISurfaceModel}}
  parent: Cysharp.Threading.Tasks
  definition: Cysharp.Threading.Tasks.UniTask`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: UniTask<IReadOnlyList<ISurfaceModel>>
  nameWithType: UniTask<IReadOnlyList<ISurfaceModel>>
  fullName: Cysharp.Threading.Tasks.UniTask<System.Collections.Generic.IReadOnlyList<Synesthesias.Snap.Runtime.ISurfaceModel>>
  nameWithType.vb: UniTask(Of IReadOnlyList(Of ISurfaceModel))
  fullName.vb: Cysharp.Threading.Tasks.UniTask(Of System.Collections.Generic.IReadOnlyList(Of Synesthesias.Snap.Runtime.ISurfaceModel))
  name.vb: UniTask(Of IReadOnlyList(Of ISurfaceModel))
  spec.csharp:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    isExternal: true
  - name: <
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Synesthesias.Snap.Runtime.ISurfaceModel
    name: ISurfaceModel
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Synesthesias.Snap.Runtime.ISurfaceModel
    name: ISurfaceModel
  - name: )
  - name: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: Cysharp.Threading.Tasks.UniTask`1
  commentId: T:Cysharp.Threading.Tasks.UniTask`1
  isExternal: true
  name: UniTask<T>
  nameWithType: UniTask<T>
  fullName: Cysharp.Threading.Tasks.UniTask<T>
  nameWithType.vb: UniTask(Of T)
  fullName.vb: Cysharp.Threading.Tasks.UniTask(Of T)
  name.vb: UniTask(Of T)
  spec.csharp:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Cysharp.Threading.Tasks.UniTask`1
    name: UniTask
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Cysharp.Threading.Tasks
  commentId: N:Cysharp.Threading.Tasks
  isExternal: true
  name: Cysharp.Threading.Tasks
  nameWithType: Cysharp.Threading.Tasks
  fullName: Cysharp.Threading.Tasks
  spec.csharp:
  - uid: Cysharp
    name: Cysharp
    isExternal: true
  - name: .
  - uid: Cysharp.Threading
    name: Threading
    isExternal: true
  - name: .
  - uid: Cysharp.Threading.Tasks
    name: Tasks
    isExternal: true
  spec.vb:
  - uid: Cysharp
    name: Cysharp
    isExternal: true
  - name: .
  - uid: Cysharp.Threading
    name: Threading
    isExternal: true
  - name: .
  - uid: Cysharp.Threading.Tasks
    name: Tasks
    isExternal: true
- uid: Google.XR.ARCoreExtensions.GeospatialPose
  commentId: T:Google.XR.ARCoreExtensions.GeospatialPose
  parent: Google.XR.ARCoreExtensions
  isExternal: true
  name: GeospatialPose
  nameWithType: GeospatialPose
  fullName: Google.XR.ARCoreExtensions.GeospatialPose
- uid: Google.XR.ARCoreExtensions
  commentId: N:Google.XR.ARCoreExtensions
  isExternal: true
  name: Google.XR.ARCoreExtensions
  nameWithType: Google.XR.ARCoreExtensions
  fullName: Google.XR.ARCoreExtensions
  spec.csharp:
  - uid: Google
    name: Google
    isExternal: true
  - name: .
  - uid: Google.XR
    name: XR
    isExternal: true
  - name: .
  - uid: Google.XR.ARCoreExtensions
    name: ARCoreExtensions
    isExternal: true
  spec.vb:
  - uid: Google
    name: Google
    isExternal: true
  - name: .
  - uid: Google.XR
    name: XR
    isExternal: true
  - name: .
  - uid: Google.XR.ARCoreExtensions
    name: ARCoreExtensions
    isExternal: true
- uid: UnityEngine.Camera
  commentId: T:UnityEngine.Camera
  parent: UnityEngine
  isExternal: true
  name: Camera
  nameWithType: Camera
  fullName: UnityEngine.Camera
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
